// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package myfirstmodule.actions;

import java.io.IOException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import io.minio.GetPresignedObjectUrlArgs;
import io.minio.MinioClient;
import io.minio.errors.ErrorResponseException;
import io.minio.errors.InsufficientDataException;
import io.minio.errors.InternalException;
import io.minio.errors.InvalidResponseException;
import io.minio.errors.ServerException;
import io.minio.errors.XmlParserException;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class PresignedObjectUrl extends CustomJavaAction<java.lang.String>
{
	private final IMendixObject File;

	public PresignedObjectUrl(
		IContext context,
		IMendixObject _file
	)
	{
		super(context);
		this.File = _file;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
		return getPresignedUrl(File);
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "PresignedObjectUrl";
	}

	// BEGIN EXTRA CODE
	private String getPresignedUrl(IMendixObject file) throws InvalidKeyException, ErrorResponseException,
			InsufficientDataException, InternalException, InvalidResponseException, NoSuchAlgorithmException,
			XmlParserException, ServerException, IllegalArgumentException, IOException {
		// 创建 MinIO 客户端
		MinioClient minioClient = MinioClient.builder()
				.endpoint("http://localhost:9000") // 替换为你的 MinIO 服务器地址
				.credentials("UhSJgM4ndTU05lp5xU5k", "V8gzbv5gEAqkHrHJ3UwdlIejYN0GuR2sW4KQQL5D")
				.build();

		// 要操作的桶名称和对象名称
		String bucketName = "test";
		String objectName = "2024-04-18 09-05-32.mp4";

		// 生成上传 presigned URL，有效期为 1 小时
		String uploadUrl = minioClient.getPresignedObjectUrl(GetPresignedObjectUrlArgs.builder()
				.method(io.minio.http.Method.GET).bucket(bucketName).object(objectName).expiry(60 * 60).build());
		System.out.println("Upload URL: " + uploadUrl);

		return uploadUrl;

	}
	// END EXTRA CODE
}
